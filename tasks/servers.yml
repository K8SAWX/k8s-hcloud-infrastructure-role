---
- name: Install hetzner sdk for Python
  pip:
    name: "hcloud==1.16.0" 
  become: yes

- name: Store the cloud init data
  set_fact:
    cloud_init: |
      #cloud-config
      users:
        # Create a k8s user, that later is required for ssh connection
        # You can change the hashed_password using mkpasswd --method=SHA-512 --rounds=4096 command
        # Note: mkpasswd is provided by whois package
        # You alse can use a ssh key
        - name: '{{ hcloud_cloud_init_user }}'
          hashed_passwd: '{{ hcloud_cloud_init_hashed_passwd }}'
          lock_passwd: false
          sudo: ['ALL=(ALL:ALL) NOPASSWD:ALL']
          shell: /bin/bash

- name: "Fetch all public ssh keys"
  shell: "cat ~/.ssh/id_rsa.pub"
  register: "ssh_keys"
  tags:
    - ssh
  no_log: true
  ignore_errors: true

- name: "Store the local ssh key"
  set_fact:
    host_ssh_key: "{{ ssh_keys.stdout }}"
  tags:
    - "ssh"
  ignore_errors: true
  no_log: true
  when: "ssh_keys is defined"

- name: "Store the local ssh key in hetzner cloud"
  hcloud_ssh_key:
    api_token: "{{ hcloud_token }}"
    name: "{{ansible_hostname}}" 
    public_key: "{{host_ssh_key}}"
  when: "host_ssh_key is defined"
  no_log: true
  ignore_errors: true

- name: "Check if there some new ssh key to create"
  hcloud_ssh_key:
    api_token: "{{ hcloud_token }}"
    name: "{{item.name}}" 
    public_key: "{{item.value}}"
  loop: "{{hcloud_new_ssh_keys}}"
  when: "hcloud_new_ssh_keys is defined"
  no_log: true

- name: "Set internal facts"
  set_fact:
    hcloud_masters: []
    hcloud_workers: []

- name: "Create the masters servers"
  hcloud_server:
    api_token: "{{ hcloud_token }}"
    labels: {'k8s-master': 'true'}
    name: "k8s-master{{item}}"
    server_type: "{{hcloud_master_instance_type}}"
    image: "{{ hcloud_instance_image }}"
    ssh_keys: "{{ hcloud_ssh_keys }} "
    user_data: "{{ cloud_init }}"
    state: "present"
  register: "hc_masters"
  with_sequence: "start=1 end={{ hcloud_num_masters_nodes }}"
  when: "hcloud_num_masters_nodes > 0"

- name: Create the nodes servers
  hcloud_server:
    api_token: "{{ hcloud_token }}"
    labels: {'k8s-worker': 'true'}
    name: "k8s-worker{{item}}"
    user_data: "{{ cloud_init }}"
    server_type: "{{hcloud_workers_instance_type}}"
    image: "{{ hcloud_instance_image }}"
    ssh_keys: "{{ hcloud_ssh_keys }} "
    state: "present"
  register: "hc_workres"
  with_sequence: "start=1 end={{ hcloud_num_workers_nodes }}"
  when: "hcloud_num_workers_nodes > 0"

- name:  "Store the master and workers IPs"
  set_fact:
    hcloud_workers: "{{ hc_workres.results | map(attribute='hcloud_server.ipv4_address') | list}}"
    hcloud_masters: "{{ hc_masters.results | map(attribute='hcloud_server.ipv4_address') | list }}"
        
